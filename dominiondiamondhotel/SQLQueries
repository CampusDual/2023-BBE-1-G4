create table hotels(id serial, name varchar(255) not null)

insert into "hotels"  (name) values('Continental')

ALTER TABLE hotels

ADD CONSTRAINT hotels_pk PRIMARY KEY (id);

select * from hotels

------

CREATE TABLE rooms (

    id SERIAL PRIMARY KEY,

    number INTEGER,

    hotel_id INTEGER REFERENCES hotels (id)

);

insert into "rooms"  (number, hotel_id) values(333,1)

ALTER TABLE rooms

ADD COLUMN state_id INTEGER REFERENCES states (id) DEFAULT 1;

UPDATE rooms

SET state_id = 1;

select * from "rooms"

------

create table customers(

    id serial PRIMARY KEY,

    name varchar(255) not null,

    lastname1 varchar(255) not null,

    lastname2 varchar(255) not null,

    phone char(13)not null,

    dni char(9)not null,

    mail varchar(255) not null

)

ALTER TABLE customers

ALTER COLUMN phone TYPE CHAR(14);

INSERT INTO customers (name, lastname1, lastname2, phone, dni, mail)

VALUES ('Lucas', 'Fernández', 'Gordillo', '+34666666666', '12345678Z', 'lucasfernández@gmail.com');

INSERT INTO customers (name, lastname1, lastname2, phone, dni, mail)

VALUES ('Paco', 'Miranda', 'López', '+34999999999', '87654321A', 'pacomiranda@gmail.com');

select * from customers

------

CREATE TABLE states (

  id SERIAL PRIMARY KEY,

  state VARCHAR(20) NOT NULL CHECK (state IN ('free', 'busy', 'maintenance'))

);

INSERT INTO states (state) VALUES ('free');

INSERT INTO states (state) VALUES ('busy');

INSERT INTO states (state) VALUES ('maintenance');

select * from states

----------

create table bookings(

id serial primary key,

entry_date date not null,

exit_date date not null,

hotel_id integer REFERENCES hotels (id),

customer_id integer REFERENCES customers (id)

)


select * from bookings

-----
CREATE TABLE idDocumentTypes (

    id SERIAL PRIMARY KEY,

    idtype VARCHAR(8) NOT NULL CHECK (idtype IN ('PASSPORT', 'DNI'))

);
INSERT INTO idDocumentTypes (idtype) VALUES ('PASSPORT');

INSERT INTO idDocumentTypes (idtype) VALUES ('DNI');
ALTER TABLE public.customers RENAME COLUMN "dni" TO "idNumber";
ALTER TABLE customers

ADD COLUMN idType_id INTEGER REFERENCES iddocumenttypes (id);
ALTER TABLE public.customers ALTER COLUMN idtype_id SET NOT NULL;

-----
ALTER TABLE bookings
ADD check_in timestamp,
ADD room_id INTEGER REFERENCES rooms (id);

----
ALTER TABLE bookings
ADD check_out timestamp

----
ALTER TABLE states
ALTER COLUMN state TYPE VARCHAR(20) USING state::VARCHAR(20),
ADD CONSTRAINT states_state_check CHECK (state IN ('free', 'busy', 'maintenance', 'cleaning'));
INSERT INTO states (state) VALUES ('cleaning');


----
ALTER TABLE hotels
ADD rating DECIMAL(10, 2);
---

create table hist_rooms(
    id serial primary key,
    change_date date not null,
    room_id integer REFERENCES rooms (id),
    state_id integer REFERENCES states (id)
)

create or replace view view_histroom_hotelid as
  select hr.id as hr_id, change_date, room_id, hr.state_id as state_id, r.hotel_id as hotel_id
   from hist_rooms hr
   inner join rooms r
   on hr.room_id=r.id;
 -----

 create table allergens (

     id serial primary key,

     name varchar(255) not null

 )

create table product_types (

    id serial primary key,

    name varchar(255) not null

)

 create table products (

     id serial primary key,

     name varchar(255) not null,

     description varchar(255),

     producttype_id integer references product_types (id),

     allergens_id integer references allergens (id)

 )

 ALTER TABLE products ADD price integer not null;

 INSERT INTO allergens (name) values ('Celery');

 INSERT INTO allergens (name) values ('Gluten');

 INSERT INTO allergens (name) values ('Crustaceans');

 INSERT INTO allergens (name) values ('Eggs');

 INSERT INTO allergens (name) values ('Fish');

 INSERT INTO allergens (name) values ('Lupin');

 INSERT INTO allergens (name) values ('Milk');

 INSERT INTO allergens (name) values ('Mollusc');

 INSERT INTO allergens (name) values ('Mustard');

 INSERT INTO allergens (name) values ('Nuts');

 INSERT INTO allergens (name) values ('Peanuts');

 INSERT INTO allergens (name) values ('Sesame seeds');

 INSERT INTO allergens (name) values ('Soya');

 INSERT INTO allergens (name) values ('Sulphites');

 ALTER TABLE products DROP COLUMN price;

 ALTER TABLE products ADD price decimal not null;

 INSERT INTO product_types (name) values ('Drink');

 INSERT INTO product_types (name) values ('Snack');

 INSERT INTO product_types (name) values ('Starter dish');

 INSERT INTO product_types (name) values ('First dish');

 INSERT INTO product_types (name) values ('Second dish');

 INSERT INTO product_types (name) values ('Dessert');

----

ALTER TABLE bookings ADD COLUMN expenses DECIMAL DEFAULT 0 NOT NULL;

----
create table country_iso (
    id serial primary key,
    iso VARCHAR(2) not null,
    name VARCHAR(255) not null
);

INSERT INTO country_iso (iso, name) VALUES ('ES', 'Spain');
INSERT INTO country_iso (iso, name) VALUES ('DK', 'Denmark');
INSERT INTO country_iso (iso, name) VALUES ('BE', 'Belgium');
INSERT INTO country_iso (iso, name) VALUES ('BG', 'Bulgaria');
INSERT INTO country_iso (iso, name) VALUES ('BR', 'Brasil');
INSERT INTO country_iso (iso, name) VALUES ('BY', 'Belarus');
INSERT INTO country_iso (iso, name) VALUES ('BZ', 'Belice');
INSERT INTO country_iso (iso, name) VALUES ('BJ', 'Benin');
INSERT INTO country_iso (iso, name) VALUES ('BT', 'Bhutan');
INSERT INTO country_iso (iso, name) VALUES ('BW', 'Botwana');
INSERT INTO country_iso (iso, name) VALUES ('CF', 'Central African Republic');
INSERT INTO country_iso (iso, name) VALUES ('CO', 'Colombia');
INSERT INTO country_iso (iso, name) VALUES ('CR', 'Costa Rica');
INSERT INTO country_iso (iso, name) VALUES ('CU', 'Cuba');
INSERT INTO country_iso (iso, name) VALUES ('CV', 'Cabo Verde');
INSERT INTO country_iso (iso, name) VALUES ('CY', 'Cyprus');
INSERT INTO country_iso (iso, name) VALUES ('CZ', 'Czech');
INSERT INTO country_iso (iso, name) VALUES ('ET', 'Ethiopia');
INSERT INTO country_iso (iso, name) VALUES ('FI', 'Finland');
INSERT INTO country_iso (iso, name) VALUES ('FJ', 'Fiji');
INSERT INTO country_iso (iso, name) VALUES ('FR', 'France');
INSERT INTO country_iso (iso, name) VALUES ('GA', 'Gabon');
INSERT INTO country_iso (iso, name) VALUES ('GE', 'Georgia');
INSERT INTO country_iso (iso, name) VALUES ('GR', 'Greece');
INSERT INTO country_iso (iso, name) VALUES ('GT', 'Guatemala');
INSERT INTO country_iso (iso, name) VALUES ('HN', 'Honduras');
INSERT INTO country_iso (iso, name) VALUES ('HR', 'Croatia');
INSERT INTO country_iso (iso, name) VALUES ('HT', 'Haiti');
INSERT INTO country_iso (iso, name) VALUES ('HU', 'Hungary');
INSERT INTO country_iso (iso, name) VALUES ('ID', 'Indonesia');
INSERT INTO country_iso (iso, name) VALUES ('IN', 'India');
INSERT INTO country_iso (iso, name) VALUES ('IQ', 'Iraq');
INSERT INTO country_iso (iso, name) VALUES ('IR', 'Iran');
INSERT INTO country_iso (iso, name) VALUES ('IS', 'Iceland');

ALTER TABLE postalcodes ADD COLUMN iso_id INTEGER REFERENCES country_iso (id);

UPDATE postalcodes SET iso_id=1 WHERE id=1

UPDATE postalcodes SET iso_id=1 WHERE id=2

ALTER TABLE postalcodes ALTER COLUMN iso_id SET NOT NULL;


